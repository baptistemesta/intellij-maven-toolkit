buildscript {
    ext.kotlin_version = '1.0.6'
    repositories {
        mavenCentral()
        maven { url 'http://dl.bintray.com/jetbrains/intellij-plugin-service' }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jetbrains.intellij" version "0.2.0"
    id 'pl.allegro.tech.build.axion-release' version '1.7.1'
    id "com.diffplug.gradle.spotless" version "3.4.0"
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'kotlin'

intellij {
    version = '2016.3.2'
    plugins = ['maven']
    pluginName = 'Maven toolkit'
    downloadSources = true
    updateSinceUntilBuild = false
    sameSinceUntilBuild = false

    publish {
        username intellijPublishUsername
        password intellijPublishPassword
    }
}

group 'com.bmesta.intellij.maven.toolkit'

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

scmVersion {
    tag { // Resulting tag will by x.y.z
        prefix = ''
        versionSeparator = ''
    }
    hooks {
        //change in the readme the version
        pre 'fileUpdate', [file: 'README.md', pattern: { v, p -> /$v/ }, replacement: { v, p -> "$v" }]
        //create a commit for the release
        pre 'commit', { v, p -> "chore(release): create release $v" }
    }
}
project.version = scmVersion.version

spotless {
    kotlin {
        // optionally takes a version
        ktlint()
        // also supports license headers
        licenseHeaderFile 'HEADER'        // License header file
    }
}